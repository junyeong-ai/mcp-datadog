[package]
name = "mcp-datadog"
version = "0.1.0"
edition = "2024"
rust-version = "1.90"
authors = ["MCP Datadog Server"]
description = "A Model Context Protocol server for Datadog API integration"
license = "MIT"
repository = "https://github.com/junyeong-ai/mcp-datadog"
keywords = ["mcp", "datadog", "observability", "monitoring", "api"]
categories = ["api-bindings", "development-tools"]

[dependencies]
# Core async runtime
tokio = { version = "1.47", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# HTTP client
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# Date/Time with natural language parsing
chrono = { version = "0.4", features = ["serde"] }
interim = { version = "0.2", features = ["chrono_0_4"] }

# Environment variables
dotenvy = "0.15"

# Logging
env_logger = "0.11"
log = "0.4"

[dev-dependencies]
# Modern async HTTP mocking (2024 trending)
wiremock = "0.6"

# Performance benchmarking with statistical analysis
criterion = { version = "0.5", features = ["async_tokio", "html_reports"] }

# Additional tokio testing utilities
tokio-test = "0.4"

# Ergonomic error enum matching
assert_matches = "1.5"

# Serial test execution for env var tests
serial_test = "3.2"

[lib]
name = "mcp_datadog"
path = "src/lib.rs"

[[bin]]
name = "mcp-datadog"
path = "src/main.rs"

[profile.release]
lto = true
codegen-units = 1
opt-level = 3
